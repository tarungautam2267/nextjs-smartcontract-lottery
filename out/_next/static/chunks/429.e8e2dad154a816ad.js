"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[429],{94429:function(t,e,i){i.r(e),i.d(e,{MetamaskAdapter:function(){return h}});var s=i(4942),a=i(92003),r=i.n(a),n=i(41436);class h extends n.J5{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(),(0,s.Z)(this,"adapterNamespace",n.yk.EIP155),(0,s.Z)(this,"currentChainNamespace",n.EN.EIP155),(0,s.Z)(this,"type",n.hN.EXTERNAL),(0,s.Z)(this,"name",n.rW.METAMASK),(0,s.Z)(this,"status",n.MP.NOT_READY),(0,s.Z)(this,"rehydrated",!1),(0,s.Z)(this,"metamaskProvider",null),this.chainConfig=t.chainConfig||null}get provider(){return this.status===n.MP.CONNECTED&&this.metamaskProvider?this.metamaskProvider:null}set provider(t){throw new Error("Not implemented")}async init(t){if(super.checkInitializationRequirements(),this.metamaskProvider=await r()({mustBeMetaMask:!0}),!this.metamaskProvider)throw n.Ty.notInstalled("Metamask extension is not installed");this.status=n.MP.READY,this.emit(n.n2.READY,n.rW.METAMASK);try{t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(e){this.emit(n.n2.ERRORED,e)}}setAdapterSettings(t){}async connect(){if(super.checkConnectionRequirements(),this.chainConfig||(this.chainConfig=(0,n.h2)(n.EN.EIP155,1)),this.status=n.MP.CONNECTING,this.emit(n.n2.CONNECTING,{adapter:n.rW.METAMASK}),!this.metamaskProvider)throw n.RM.notConnectedError("Not able to connect with metamask");try{await this.metamaskProvider.request({method:"eth_requestAccounts"});const{chainId:t}=this.metamaskProvider;if(t!==this.chainConfig.chainId&&await this.switchChain(this.chainConfig),this.status=n.MP.CONNECTED,!this.provider)throw n.RM.notConnectedError("Failed to connect with provider");return this.provider.once("disconnect",(()=>{this.disconnect()})),this.emit(n.n2.CONNECTED,{adapter:n.rW.METAMASK,reconnected:this.rehydrated}),this.provider}catch(t){throw this.status=n.MP.READY,this.rehydrated=!1,this.emit(n.n2.ERRORED,t),n.RM.connectionError("Failed to login with metamask wallet")}}async disconnect(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==n.MP.CONNECTED)throw n.RM.disconnectionError("Not connected with wallet");null===(t=this.provider)||void 0===t||t.removeAllListeners(),e.cleanup?(this.status=n.MP.NOT_READY,this.metamaskProvider=null):this.status=n.MP.READY,this.rehydrated=!1,this.emit(n.n2.DISCONNECTED)}async getUserInfo(){if(this.status!==n.MP.CONNECTED)throw n.RM.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async switchChain(t){if(!this.metamaskProvider)throw n.RM.notConnectedError("Not connected with wallet");try{await this.metamaskProvider.request({method:"wallet_switchEthereumChain",params:[{chainId:t.chainId}]})}catch(e){if(4902!==e.code)throw e;await this.metamaskProvider.request({method:"wallet_addEthereumChain",params:[{chainId:t.chainId,chainName:t.displayName,rpcUrls:[t.rpcTarget]}]})}}}}}]);